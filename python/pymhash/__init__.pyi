from typing import List
from .lib import *

class OrientationHash:
    def __init__(self, hash_value: List[List[bool]]) -> None: ...
    def __str__(self) -> str: ...
    def __hash__(self) -> int: ...
    def __eq__(self, value: "OrientationHash") -> bool: ...
    @classmethod
    def from_str(cls, hash_str: str) -> "OrientationHash": ...
    def to_str(self) -> str: ...
    def hash_size(self) -> int: ...
    def unique_hash(self) -> int: ...

class ImageHash:

    VERSION: int = ...

    def __init__(self) -> None: ...
    def add_hash(self, hash: OrientationHash) -> None: ...
    def to_str(self) -> str: ...
    @classmethod
    def from_str(cls, hash_str: str) -> ImageHash: ...
    def unique_hash(self) -> int: ...
    def __eq__(self, value: "ImageHash") -> bool: ...
    def __sub__(self, value: "ImageHash") -> float: ...
    def __str__(self) -> str: ...
    def __hash__(self) -> int: ...
    @property
    def hashes(self) -> List[OrientationHash]: ...
